classes
    id
    className
    timings
    daysPerWeek
http://localhost:5000/classes/add
http://localhost:5000/classes/edit
http://localhost:5000/classes/delete
http://localhost:5000/classes/list

batch
    id
    batchName
    batchDates
http://localhost:5000/batch/add
http://localhost:5000/batch/edit
http://localhost:5000/batch/delete
http://localhost:5000/batch/list

students
    id
    name
    batchId
    classId
http://localhost:5000/students/add
http://localhost:5000/students/edit
http://localhost:5000/students/delete
http://localhost:5000/students/list


NODE Server File Structure:
    server.js or index.js (API entry point) => Reception
        - routes => Path ways (Event Loop)
        - controllers => Data Validations / Send back Responses
        - services => actual (db data retrieval/processing, or file processing) work and return back to controllers

Express File Structure
    - entry point (express.js) // http://localhost:5000/users or http://localhost:5000/products (delegating...)
        -> routes // users/add or users/edit or users/delete or users/list (routing...)
            -> controllers // add or edit or delete or list (actual functionality)
                -> services // db operations or file opertions
        -> routes // products/add or products/edit or products/delete or products/list (routing...)
            -> controllers // add or edit or delete or list (actual functionality)
                -> services // db operations or file opertions

NOTES: 06-05-2023

RESTful API
    - GET (querystring)
    - POST (request body or form body)
    - PUT (any updates)
    - DELETE (any deletion)

    - Concept
        - listAll / readAll / showAll
        - listById / readById / showById

        - update

        - deleteById

        - create / add

        - Users (number, string, boolean, array, array of objects, object, object of array, object of object)
            - id
            - name
            - username
            - email
            - password
            - phone
            - gender
            - age


NOTES: 07-05-2023

API
    - Application Programming Interface
        - bridge connecting 2 different networks/platform
            - frontend and backend

    - Usage
        - to send and receive data

    - Types
        - 3 Types
            - Normal APIs
                - GET
                - POST
            
            - RESTful (CRUD - Create, Read, Update, Delete)
                - GET (querystring)
                    - to retrieve (Read)
                - POST (form/req body)
                    - to add (Create)
                - PUT (querystring, form/req body)
                    - to update
                - DELETE (querystring, form/req body)
                    - to delete

                - Non Structural
                    - number
                    - string
                    - array
                    - object
                    - boolean

                    - querystring
                    - form body
                    - form body (json, text, xml, binary)

            - SOAP APIs
                - GET
                - POST
                - PUT
                - DELETE

                - Structural
                    - XML